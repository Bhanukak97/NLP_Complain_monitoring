{"ast":null,"code":"var _jsxFileName = \"/Users/dasuni/Desktop/Flask/client/src/components/TabelData/Tabel.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from \"../MOCK_DATA.json\";\nimport { COLUMNS } from \"../columns\";\nimport { render } from '@testing-library/react';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Table = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroups => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroups.getHeaderGroupProps(),\n        children: headerGroups.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 47\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","render","Table","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/dasuni/Desktop/Flask/client/src/components/TabelData/Tabel.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport MOCK_DATA from \"../MOCK_DATA.json\";\r\nimport { COLUMNS } from \"../columns\";\r\nimport { render } from '@testing-library/react';\r\nimport './table.css';\r\n\r\n\r\nexport  const Table = () => {\r\n\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    })\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = tableInstance\r\n\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map((headerGroups) => (\r\n                        <tr {...headerGroups.getHeaderGroupProps()}>\r\n                            {headerGroups.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cell) => {\r\n                                       return <td {...cell.getCellProps()}>{ cell.render('Cell')}</td>\r\n                                    })\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAO,aAAa;AAAC;AAGrB,OAAQ,MAAMC,KAAK,GAAG,MAAM;EAAA;EAExB,MAAMC,OAAO,GAAGN,OAAO,CAAC,MAAMG,OAAO,EAAE,EAAE,CAAC;EAC1C,MAAMI,IAAI,GAAGP,OAAO,CAAC,MAAME,SAAS,EAAE,EAAE,CAAC;EAEzC,MAAMM,aAAa,GAAGP,QAAQ,CAAC;IAC3BK,OAAO;IACPC;EACJ,CAAC,CAAC;EAEF,MAAM;IACFE,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACJ,CAAC,GAAGL,aAAa;EAEjB,oBACI;IAAA,GAAWC,aAAa,EAAE;IAAA,wBACtB;MAAA,UACKE,YAAY,CAACG,GAAG,CAAEH,YAAY,iBACvB;QAAA,GAAQA,YAAY,CAACI,mBAAmB,EAAE;QAAA,UACrCJ,YAAY,CAACK,OAAO,CAACF,GAAG,CAAEG,MAAM,iBAC7B;UAAA,GAAQA,MAAM,CAACC,cAAc,EAAE;UAAA,UAAGD,MAAM,CAACb,MAAM,CAAC,QAAQ;QAAC;UAAA;UAAA;UAAA;QAAA,QAC5D;MAAC;QAAA;QAAA;QAAA;MAAA,QAET;IAAC;MAAA;MAAA;MAAA;IAAA,QACF,eACR;MAAA,GAAWM,iBAAiB,EAAE;MAAA,UAEtBE,IAAI,CAACE,GAAG,CAACK,GAAG,IAAI;QACZN,UAAU,CAACM,GAAG,CAAC;QACf,oBACI;UAAA,GAAQA,GAAG,CAACC,WAAW,EAAE;UAAA,UAEjBD,GAAG,CAACE,KAAK,CAACP,GAAG,CAAEQ,IAAI,IAAK;YACrB,oBAAO;cAAA,GAAQA,IAAI,CAACC,YAAY,EAAE;cAAA,UAAID,IAAI,CAAClB,MAAM,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA,QAAM;UAClE,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAGL;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEhB,CAAC;AAAA,GAhDaC,KAAK;EAAA,QAKOJ,QAAQ;AAAA;AAAA,KALpBI,KAAK;AAkDnB,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}